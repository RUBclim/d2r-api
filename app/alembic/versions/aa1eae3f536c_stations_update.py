"""stations_update

Revision ID: aa1eae3f536c
Revises:
Create Date: 2024-11-08 13:05:28.120800

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = 'aa1eae3f536c'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('station', sa.Column('city', sa.Text(), nullable=True))
    # city is always Dortmund let's set it to that
    op.execute("UPDATE station SET city = 'Dortmund'")
    op.alter_column('station', 'city', nullable=False)

    op.add_column('station', sa.Column('country', sa.Text(), nullable=True))
    # country is always Germany let's set it to that
    op.execute("UPDATE station SET country = 'Germany'")
    op.alter_column('station', 'country', nullable=False)

    op.add_column(
        'station', sa.Column(
            'dominant_land_use', sa.Text(),
            nullable=True, comment='e.g. residential, commercial, industrial, ...',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'urban_atlas_class_name', sa.Text(), nullable=True,
        ),
    )
    op.add_column(
        'station', sa.Column(
            'urban_atlas_class_nr', sa.Integer(), nullable=True,
        ),
    )
    op.add_column(
        'station', sa.Column(
            'orographic_setting', sa.Text(),
            nullable=True, comment='e.g. Flat, Hilly',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'artificial_heat_sources', sa.Text(),
            nullable=True, comment='e.g. cars, buildings, ...',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'proximity_to_building', sa.Numeric(), nullable=True,
        ),
    )
    op.add_column(
        'station', sa.Column(
            'proximity_to_parking', sa.Numeric(), nullable=True,
        ),
    )
    op.add_column(
        'station', sa.Column(
            'proximity_to_tree', sa.Numeric(), nullable=True,
        ),
    )
    op.add_column(
        'station', sa.Column(
            'surrounding_land_cover_description', sa.Text(
            ), nullable=True, comment='a text describing the surrounding land cover',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'mounting_type', sa.Text(), nullable=True,
            comment='the structure the sensor is mounted to e.g. black mast, building, ...',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'mounting_structure_material', sa.Text(), nullable=True,
            comment='The material the structure the sensor is mounted to is made of e.g. metal, wood, ...',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'mounting_structure_height_agl', sa.Numeric(
            ), nullable=True, comment='the total height of the mounting structure above ground level',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'mounting_structure_diameter', sa.Numeric(
            ), nullable=True, comment='the diameter of the mounting structure at the mounting height',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'mounting_structure_light_extension_offset', sa.Numeric(
            ), nullable=True, comment='when mounted to a lantern post, the overhang of the lantern',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'sensor_height_agl', sa.Numeric(), nullable=True,
            comment='the mounting height of the main component of the station (ATM41 or SHT35)',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'sensor_distance_from_mounting_structure', sa.Text(), nullable=True,
            comment='the distance of the main component of the station (ATM41 or SHT35) from the mounting structure',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'sensor_orientation', sa.Text(), nullable=True,
            comment='the orientation (-angle) of the arm of the main component of the station (ATM41 or SHT35) from the mounting structure',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'blg_sensor_height_agl', sa.Numeric(
            ), nullable=True, comment='the mounting height of the black globe sensor of the station',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'blg_sensor_distance_from_mounting_structure', sa.Text(
            ), nullable=True, comment='the distance of the black globe sensor of the station from the mounting structure',
        ),
    )
    op.add_column(
        'station', sa.Column(
            'blg_sensor_orientation', sa.Text(), nullable=True,
            comment='the orientation (-angle) of the arm of the black globe sensor of the station from the mounting structure',
        ),
    )
    op.alter_column(
        'station', 'street',
        existing_type=sa.TEXT(),
        nullable=False,
    )
    op.execute('UPDATE station SET plz = 99999 WHERE plz IS NULL')
    op.alter_column(
        'station', 'plz',
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'station', 'plz',
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        'station', 'street',
        existing_type=sa.TEXT(),
        nullable=True,
    )
    op.drop_column('station', 'blg_sensor_orientation')
    op.drop_column('station', 'blg_sensor_distance_from_mounting_structure')
    op.drop_column('station', 'blg_sensor_height_agl')
    op.drop_column('station', 'sensor_orientation')
    op.drop_column('station', 'sensor_distance_from_mounting_structure')
    op.drop_column('station', 'sensor_height_agl')
    op.drop_column('station', 'mounting_structure_light_extension_offset')
    op.drop_column('station', 'mounting_structure_diameter')
    op.drop_column('station', 'mounting_structure_height_agl')
    op.drop_column('station', 'mounting_structure_material')
    op.drop_column('station', 'mounting_type')
    op.drop_column('station', 'surrounding_land_cover_description')
    op.drop_column('station', 'proximity_to_tree')
    op.drop_column('station', 'proximity_to_parking')
    op.drop_column('station', 'proximity_to_building')
    op.drop_column('station', 'artificial_heat_sources')
    op.drop_column('station', 'orographic_setting')
    op.drop_column('station', 'urban_atlas_class_nr')
    op.drop_column('station', 'urban_atlas_class_name')
    op.drop_column('station', 'dominant_land_use')
    op.drop_column('station', 'country')
    op.drop_column('station', 'city')
    # ### end Alembic commands ###
