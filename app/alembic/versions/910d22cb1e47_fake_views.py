"""fake_views

Revision ID: 910d22cb1e47
Revises: 336ac2d653e7
Create Date: 2025-06-24 21:35:12.558421

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '910d22cb1e47'
down_revision: str | None = '336ac2d653e7'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP MATERIALIZED VIEW biomet_data_hourly')
    op.execute('DROP MATERIALIZED VIEW biomet_data_daily')
    op.execute('DROP MATERIALIZED VIEW temp_rh_data_hourly')
    op.execute('DROP MATERIALIZED VIEW temp_rh_data_daily')
    op.create_table(
        'biomet_data_daily',
        sa.Column('measured_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('station_id', sa.Text(), nullable=False),
        sa.Column('absolute_humidity_min', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column(
            'absolute_humidity_max', sa.Numeric(),
            nullable=True, comment='g/m3',
        ),
        sa.Column('air_temperature_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'atmospheric_pressure_min', sa.Numeric(),
            nullable=True, comment='kPa',
        ),
        sa.Column(
            'atmospheric_pressure_max', sa.Numeric(),
            nullable=True, comment='kPa',
        ),
        sa.Column(
            'atmospheric_pressure_reduced_min',
            sa.Numeric(), nullable=True, comment='hPa',
        ),
        sa.Column(
            'atmospheric_pressure_reduced_max',
            sa.Numeric(), nullable=True, comment='hPa',
        ),
        sa.Column('battery_voltage_min', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('battery_voltage_max', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column(
            'black_globe_temperature_min',
            sa.Numeric(),
            nullable=True,
            comment='°C',
        ),
        sa.Column(
            'black_globe_temperature_max',
            sa.Numeric(),
            nullable=True,
            comment='°C',
        ),
        sa.Column(
            'blg_battery_voltage_min', sa.Numeric(),
            nullable=True, comment='V',
        ),
        sa.Column('blg_battery_voltage_max', sa.Numeric(), nullable=True, comment='V'),
        sa.Column(
            'blg_time_offset_min', sa.Numeric(),
            nullable=True, comment='seconds',
        ),
        sa.Column(
            'blg_time_offset_max', sa.Numeric(),
            nullable=True, comment='seconds',
        ),
        sa.Column('dew_point_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('dew_point_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'lightning_average_distance_min',
            sa.Numeric(), nullable=True, comment='km',
        ),
        sa.Column(
            'lightning_average_distance_max',
            sa.Numeric(), nullable=True, comment='km',
        ),
        sa.Column('mrt_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('mrt_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('pet_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('pet_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity_min', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('relative_humidity_max', sa.Numeric(), nullable=True, comment='%'),
        sa.Column(
            'sensor_temperature_internal_min',
            sa.Numeric(), nullable=True, comment='°C',
        ),
        sa.Column(
            'sensor_temperature_internal_max',
            sa.Numeric(), nullable=True, comment='°C',
        ),
        sa.Column('solar_radiation_min', sa.Numeric(), nullable=True, comment='W/m2'),
        sa.Column('solar_radiation_max', sa.Numeric(), nullable=True, comment='W/m2'),
        sa.Column('specific_humidity_min', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('specific_humidity_max', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column(
            'thermistor_resistance_min', sa.Numeric(),
            nullable=True, comment='Ohms',
        ),
        sa.Column(
            'thermistor_resistance_max', sa.Numeric(),
            nullable=True, comment='Ohms',
        ),
        sa.Column('u_wind_min', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('u_wind_max', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('utci_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('utci_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('v_wind_min', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('v_wind_max', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('vapor_pressure_min', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('vapor_pressure_max', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('voltage_ratio_min', sa.Numeric(), nullable=True, comment='-'),
        sa.Column('voltage_ratio_max', sa.Numeric(), nullable=True, comment='-'),
        sa.Column(
            'wet_bulb_temperature_min', sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column(
            'wet_bulb_temperature_max', sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column('wind_speed_min', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('wind_speed_max', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('x_orientation_angle_min', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('x_orientation_angle_max', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('y_orientation_angle_min', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('y_orientation_angle_max', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('air_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('atmospheric_pressure', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('vapor_pressure', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('wind_speed', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column(
            'wind_direction', sa.Numeric(),
            nullable=True, comment='°',
        ),
        sa.Column('u_wind', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('v_wind', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('maximum_wind_speed', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('precipitation_sum', sa.Numeric(), nullable=True, comment='mm'),
        sa.Column('solar_radiation', sa.Numeric(), nullable=True, comment='W/m2'),
        sa.Column(
            'lightning_average_distance',
            sa.Numeric(), nullable=True, comment='km',
        ),
        sa.Column(
            'lightning_strike_count', sa.Numeric(),
            nullable=True, comment='-',
        ),
        sa.Column(
            'sensor_temperature_internal',
            sa.Numeric(), nullable=True, comment='°C',
        ),
        sa.Column('x_orientation_angle', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('y_orientation_angle', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('black_globe_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('thermistor_resistance', sa.Numeric(), nullable=True, comment='Ohms'),
        sa.Column('voltage_ratio', sa.Numeric(), nullable=True, comment='-'),
        sa.Column('battery_voltage', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('protocol_version', sa.Integer(), nullable=True),
        sa.Column('dew_point', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('absolute_humidity', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('specific_humidity', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('heat_index', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('wet_bulb_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('blg_time_offset', sa.Numeric(), nullable=True, comment='seconds'),
        sa.Column('mrt', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('utci', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'utci_category', postgresql.ENUM(
                'unknown', 'extreme_cold_stress', 'very_strong_cold_stress', 'strong_cold_stress', 'moderate_cold_stress', 'slight_cold_stress', 'no_thermal_stress',
                'slight_heat_stress', 'moderate_heat_stress', 'strong_heat_stress', 'very_strong_heat_stress', 'extreme_heat_stress',
                name='heatstresscategories',
                create_type=False,
            ), nullable=True,
        ),
        sa.Column('pet', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'pet_category', postgresql.ENUM(
                'unknown', 'extreme_cold_stress', 'very_strong_cold_stress', 'strong_cold_stress', 'moderate_cold_stress', 'slight_cold_stress', 'no_thermal_stress',
                'slight_heat_stress', 'moderate_heat_stress', 'strong_heat_stress', 'very_strong_heat_stress', 'extreme_heat_stress',
                name='heatstresscategories',
                create_type=False,
            ), nullable=True,
        ),
        sa.Column(
            'atmospheric_pressure_reduced',
            sa.Numeric(), nullable=True, comment='hPa',
        ),
        sa.Column('blg_battery_voltage', sa.Numeric(), nullable=True, comment='V'),
        sa.ForeignKeyConstraint(['station_id'], ['station.station_id']),
        sa.PrimaryKeyConstraint('station_id', 'measured_at'),
    )
    op.create_index(
        op.f('ix_biomet_data_daily_measured_at'),
        'biomet_data_daily', ['measured_at'], unique=False,
    )
    op.create_index(
        op.f('ix_biomet_data_daily_station_id'),
        'biomet_data_daily', ['station_id'], unique=False,
    )
    op.create_index(
        'ix_biomet_data_daily_station_id_measured_at',
        'biomet_data_daily', ['station_id', 'measured_at'], unique=True,
    )
    op.create_table(
        'biomet_data_hourly',
        sa.Column('station_id', sa.Text(), nullable=False),
        sa.Column('measured_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('absolute_humidity_min', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column(
            'absolute_humidity_max', sa.Numeric(), nullable=True, comment='g/m3',
        ),
        sa.Column('air_temperature_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'atmospheric_pressure_min', sa.Numeric(),
            nullable=True, comment='kPa',
        ),
        sa.Column(
            'atmospheric_pressure_max', sa.Numeric(),
            nullable=True, comment='kPa',
        ),
        sa.Column(
            'atmospheric_pressure_reduced_min',
            sa.Numeric(), nullable=True, comment='hPa',
        ),
        sa.Column(
            'atmospheric_pressure_reduced_max',
            sa.Numeric(), nullable=True, comment='hPa',
        ),
        sa.Column(
            'battery_voltage_min', sa.Numeric(),
            nullable=True, comment='Volts',
        ),
        sa.Column('battery_voltage_max', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column(
            'black_globe_temperature_min',
            sa.Numeric(), nullable=True, comment='°C',
        ),
        sa.Column(
            'black_globe_temperature_max',
            sa.Numeric(), nullable=True, comment='°C',
        ),
        sa.Column('blg_battery_voltage_min', sa.Numeric(), nullable=True, comment='V'),
        sa.Column('blg_battery_voltage_max', sa.Numeric(), nullable=True, comment='V'),
        sa.Column(
            'blg_time_offset_min', sa.Numeric(),
            nullable=True, comment='seconds',
        ),
        sa.Column(
            'blg_time_offset_max', sa.Numeric(),
            nullable=True, comment='seconds',
        ),
        sa.Column('dew_point_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('dew_point_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'lightning_average_distance_min',
            sa.Numeric(), nullable=True, comment='km',
        ),
        sa.Column(
            'lightning_average_distance_max',
            sa.Numeric(), nullable=True, comment='km',
        ),
        sa.Column('mrt_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('mrt_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('pet_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('pet_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity_min', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('relative_humidity_max', sa.Numeric(), nullable=True, comment='%'),
        sa.Column(
            'sensor_temperature_internal_min',
            sa.Numeric(), nullable=True, comment='°C',
        ),
        sa.Column(
            'sensor_temperature_internal_max',
            sa.Numeric(), nullable=True, comment='°C',
        ),
        sa.Column('solar_radiation_min', sa.Numeric(), nullable=True, comment='W/m2'),
        sa.Column('solar_radiation_max', sa.Numeric(), nullable=True, comment='W/m2'),
        sa.Column('specific_humidity_min', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('specific_humidity_max', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column(
            'thermistor_resistance_min', sa.Numeric(),
            nullable=True, comment='Ohms',
        ),
        sa.Column(
            'thermistor_resistance_max', sa.Numeric(),
            nullable=True, comment='Ohms',
        ),
        sa.Column('u_wind_min', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('u_wind_max', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('utci_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('utci_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('v_wind_min', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('v_wind_max', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('vapor_pressure_min', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('vapor_pressure_max', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('voltage_ratio_min', sa.Numeric(), nullable=True, comment='-'),
        sa.Column('voltage_ratio_max', sa.Numeric(), nullable=True, comment='-'),
        sa.Column(
            'wet_bulb_temperature_min', sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column(
            'wet_bulb_temperature_max', sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column('wind_speed_min', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('wind_speed_max', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('x_orientation_angle_min', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('x_orientation_angle_max', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('y_orientation_angle_min', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('y_orientation_angle_max', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('air_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('atmospheric_pressure', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('vapor_pressure', sa.Numeric(), nullable=True, comment='kPa'),
        sa.Column('wind_speed', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('wind_direction', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('u_wind', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('v_wind', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('maximum_wind_speed', sa.Numeric(), nullable=True, comment='m/s'),
        sa.Column('precipitation_sum', sa.Numeric(), nullable=True, comment='mm'),
        sa.Column('solar_radiation', sa.Numeric(), nullable=True, comment='W/m2'),
        sa.Column(
            'lightning_average_distance',
            sa.Numeric(), nullable=True, comment='km',
        ),
        sa.Column('lightning_strike_count', sa.Numeric(), nullable=True, comment='-'),
        sa.Column(
            'sensor_temperature_internal',
            sa.Numeric(),
            nullable=True,
            comment='°C',
        ),
        sa.Column('x_orientation_angle', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('y_orientation_angle', sa.Numeric(), nullable=True, comment='°'),
        sa.Column('black_globe_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('thermistor_resistance', sa.Numeric(), nullable=True, comment='Ohms'),
        sa.Column('voltage_ratio', sa.Numeric(), nullable=True, comment='-'),
        sa.Column('battery_voltage', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('protocol_version', sa.Integer(), nullable=True),
        sa.Column('dew_point', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('absolute_humidity', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('specific_humidity', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('heat_index', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('wet_bulb_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('blg_time_offset', sa.Numeric(), nullable=True, comment='seconds'),
        sa.Column('mrt', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('utci', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'utci_category', postgresql.ENUM(
                'unknown', 'extreme_cold_stress', 'very_strong_cold_stress',
                'strong_cold_stress', 'moderate_cold_stress', 'slight_cold_stress',
                'no_thermal_stress', 'slight_heat_stress', 'moderate_heat_stress',
                'strong_heat_stress', 'very_strong_heat_stress', 'extreme_heat_stress',
                name='heatstresscategories',
                create_type=False,
            ), nullable=True,
        ),
        sa.Column('pet', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column(
            'pet_category', postgresql.ENUM(
                'unknown', 'extreme_cold_stress', 'very_strong_cold_stress',
                'strong_cold_stress', 'moderate_cold_stress', 'slight_cold_stress',
                'no_thermal_stress', 'slight_heat_stress', 'moderate_heat_stress',
                'strong_heat_stress', 'very_strong_heat_stress', 'extreme_heat_stress',
                name='heatstresscategories',
                create_type=False,
            ), nullable=True,
        ),
        sa.Column(
            'atmospheric_pressure_reduced',
            sa.Numeric(), nullable=True, comment='hPa',
        ),
        sa.Column('blg_battery_voltage', sa.Numeric(), nullable=True, comment='V'),
        sa.ForeignKeyConstraint(['station_id'], ['station.station_id']),
        sa.PrimaryKeyConstraint('station_id', 'measured_at'),
    )
    op.create_index(
        op.f('ix_biomet_data_hourly_measured_at'),
        'biomet_data_hourly', ['measured_at'], unique=False,
    )
    op.create_index(
        op.f('ix_biomet_data_hourly_station_id'),
        'biomet_data_hourly', ['station_id'], unique=False,
    )
    op.create_index(
        'ix_biomet_data_hourly_station_id_measured_at',
        'biomet_data_hourly', ['station_id', 'measured_at'], unique=True,
    )
    op.create_table(
        'temp_rh_data_daily',
        sa.Column('measured_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('station_id', sa.Text(), nullable=False),
        sa.Column('absolute_humidity_min', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('absolute_humidity_max', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('air_temperature_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_raw_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_raw_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('battery_voltage_min', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('battery_voltage_max', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('dew_point_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('dew_point_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity_min', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('relative_humidity_max', sa.Numeric(), nullable=True, comment='%'),
        sa.Column(
            'relative_humidity_raw_min',
            sa.Numeric(), nullable=True, comment='%',
        ),
        sa.Column(
            'relative_humidity_raw_max',
            sa.Numeric(), nullable=True, comment='%',
        ),
        sa.Column('specific_humidity_min', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('specific_humidity_max', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column(
            'wet_bulb_temperature_min', sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column(
            'wet_bulb_temperature_max', sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column('air_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('battery_voltage', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('protocol_version', sa.Integer(), nullable=True),
        sa.Column('dew_point', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('absolute_humidity', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('specific_humidity', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('heat_index', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('wet_bulb_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_raw', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity_raw', sa.Numeric(), nullable=True, comment='%'),
        sa.ForeignKeyConstraint(['station_id'], ['station.station_id']),
        sa.PrimaryKeyConstraint('station_id', 'measured_at'),
    )
    op.create_index(
        op.f('ix_temp_rh_data_daily_measured_at'),
        'temp_rh_data_daily', ['measured_at'], unique=False,
    )
    op.create_index(
        op.f('ix_temp_rh_data_daily_station_id'),
        'temp_rh_data_daily', ['station_id'], unique=False,
    )
    op.create_index(
        'ix_temp_rh_data_daily_station_id_measured_at',
        'temp_rh_data_daily', ['station_id', 'measured_at'], unique=True,
    )
    op.create_table(
        'temp_rh_data_hourly',
        sa.Column('measured_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('station_id', sa.Text(), nullable=False),
        sa.Column('absolute_humidity_min', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('absolute_humidity_max', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('air_temperature_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_raw_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_raw_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('battery_voltage_min', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('battery_voltage_max', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('dew_point_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('dew_point_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_min', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('heat_index_max', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity_min', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('relative_humidity_max', sa.Numeric(), nullable=True, comment='%'),
        sa.Column(
            'relative_humidity_raw_min',
            sa.Numeric(),
            nullable=True,
            comment='%',
        ),
        sa.Column(
            'relative_humidity_raw_max',
            sa.Numeric(),
            nullable=True,
            comment='%',
        ),
        sa.Column('specific_humidity_min', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('specific_humidity_max', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column(
            'wet_bulb_temperature_min',
            sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column(
            'wet_bulb_temperature_max',
            sa.Numeric(),
            nullable=True, comment='°C',
        ),
        sa.Column('air_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity', sa.Numeric(), nullable=True, comment='%'),
        sa.Column('battery_voltage', sa.Numeric(), nullable=True, comment='Volts'),
        sa.Column('protocol_version', sa.Integer(), nullable=True),
        sa.Column('dew_point', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('absolute_humidity', sa.Numeric(), nullable=True, comment='g/m3'),
        sa.Column('specific_humidity', sa.Numeric(), nullable=True, comment='g/kg'),
        sa.Column('heat_index', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('wet_bulb_temperature', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('air_temperature_raw', sa.Numeric(), nullable=True, comment='°C'),
        sa.Column('relative_humidity_raw', sa.Numeric(), nullable=True, comment='%'),
        sa.ForeignKeyConstraint(['station_id'], ['station.station_id']),
        sa.PrimaryKeyConstraint('station_id', 'measured_at'),
    )
    op.create_index(
        op.f('ix_temp_rh_data_hourly_measured_at'),
        'temp_rh_data_hourly', ['measured_at'], unique=False,
    )
    op.create_index(
        op.f('ix_temp_rh_data_hourly_station_id'),
        'temp_rh_data_hourly', ['station_id'], unique=False,
    )
    op.create_index(
        'ix_temp_rh_data_hourly_station_id_measured_at',
        'temp_rh_data_hourly', ['station_id', 'measured_at'], unique=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        'ix_temp_rh_data_hourly_station_id_measured_at',
        table_name='temp_rh_data_hourly',
    )
    op.drop_index(
        op.f('ix_temp_rh_data_hourly_station_id'),
        table_name='temp_rh_data_hourly',
    )
    op.drop_index(
        op.f('ix_temp_rh_data_hourly_measured_at'),
        table_name='temp_rh_data_hourly',
    )
    op.drop_table('temp_rh_data_hourly')
    op.drop_index(
        'ix_temp_rh_data_daily_station_id_measured_at',
        table_name='temp_rh_data_daily',
    )
    op.drop_index(
        op.f('ix_temp_rh_data_daily_station_id'),
        table_name='temp_rh_data_daily',
    )
    op.drop_index(
        op.f('ix_temp_rh_data_daily_measured_at'),
        table_name='temp_rh_data_daily',
    )
    op.drop_table('temp_rh_data_daily')
    op.drop_index(
        'ix_biomet_data_hourly_station_id_measured_at',
        table_name='biomet_data_hourly',
    )
    op.drop_index(
        op.f('ix_biomet_data_hourly_station_id'),
        table_name='biomet_data_hourly',
    )
    op.drop_index(
        op.f('ix_biomet_data_hourly_measured_at'),
        table_name='biomet_data_hourly',
    )
    op.drop_table('biomet_data_hourly')
    op.drop_index(
        'ix_biomet_data_daily_station_id_measured_at',
        table_name='biomet_data_daily',
    )
    op.drop_index(
        op.f('ix_biomet_data_daily_station_id'),
        table_name='biomet_data_daily',
    )
    op.drop_index(
        op.f('ix_biomet_data_daily_measured_at'),
        table_name='biomet_data_daily',
    )
    op.drop_table('biomet_data_daily')
    # the views will fix themselves on every startup of
    # ### end Alembic commands ###
