services:
  db:
    env_file:
      - .env.dev
    ports:
      - "127.0.0.1:5432:5432"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: d2r-api
    env_file:
      - .env.dev
    command: [
      wait-for-it, "db:5432", --,
      uvicorn,
      "app.main:app",
      "--reload",
      "--host", "0.0.0.0",
      "--port", "5000",
      "--log-level", "debug",
    ]
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - ./app:/usr/src/app/app:ro

  redis:
    ports:
      - "127.0.0.1:6379:6379"

  celery:
    # TODO: maybe build a separate image
    image: d2r-api
    restart: always
    env_file:
      - .env.dev
    command: [
      celery, -A, app.celery, worker,
      --prefetch-multiplier=1,
      --concurrency=2,
      --loglevel, INFO,
    ]
    volumes:
      - ./app:/usr/src/app/app:ro

  celery-beat:
    image: d2r-api
    env_file:
      - .env.dev
    command: [
      celery, -A, app.tasks, beat,
      --loglevel, INFO,
      --schedule, /tmp/celerybeat-schedule.db
    ]
    volumes:
      - ./app:/usr/src/app/app:ro

  terracotta-db:
    env_file:
      - .env.dev
    ports:
      - "127.0.0.1:5433:5432"

  terracotta-server:
    image: d2r-api
    env_file:
      - .env.dev
    command: [
      gunicorn,
      "--bind", "0.0.0.0:5000",
      "--workers", "1",
      "--log-level", "debug",
      "app.tc_app:app",
    ]
    ports:
      - "127.0.0.1:5001:5000"
    volumes:
      - ./app:/usr/src/app/app:ro

  dashboard:
    ports:
      - "3000:3000"

  nginx:
    ports:
      # api
      - "127.0.0.1:8080:8080"
      # dashboard
      - "127.0.0.1:8081:8081"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/nginx.conf:ro
